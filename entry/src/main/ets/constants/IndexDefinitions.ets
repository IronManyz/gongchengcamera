/**
 * 数据库索引定义常量
 * 包含所有表的索引创建SQL语句
 */

import {
  INDEX_NAMES,
  TABLE_NAMES,
  PROJECT_FIELDS,
  SITE_FIELDS,
  PHOTO_FIELDS,
  WATERMARK_TEMPLATE_FIELDS,
  USER_FIELDS,
  BACKUP_FIELDS,
  APP_SETTINGS_FIELDS
} from './DatabaseConstants'

/**
 * 项目表索引SQL
 */
export const PROJECTS_INDEXES = [
  // 项目名称索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PROJECTS_NAME}
   ON ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.NAME})`,

  // 项目状态索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PROJECTS_STATUS}
   ON ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.STATUS})`,

  // 项目日期索引（用于范围查询）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PROJECTS_DATES}
   ON ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.START_DATE}, ${PROJECT_FIELDS.END_DATE})`,

  // 项目编号索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PROJECTS_CODE}
   ON ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.CODE})`
]

/**
 * 工点表索引SQL
 */
export const SITES_INDEXES = [
  // 项目ID索引（外键索引）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.SITES_PROJECT_ID}
   ON ${TABLE_NAMES.SITES}(${SITE_FIELDS.PROJECT_ID})`,

  // 位置坐标索引（用于地理查询）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.SITES_LOCATION}
   ON ${TABLE_NAMES.SITES}(${SITE_FIELDS.LATITUDE}, ${SITE_FIELDS.LONGITUDE})`,

  // 工点名称索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.SITES_NAME}
   ON ${TABLE_NAMES.SITES}(${SITE_FIELDS.NAME})`
]

/**
 * 照片表索引SQL
 */
export const PHOTOS_INDEXES = [
  // 项目ID索引（外键索引）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PHOTOS_PROJECT_ID}
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.PROJECT_ID})`,

  // 工点ID索引（外键索引）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PHOTOS_SITE_ID}
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.SITE_ID})`,

  // 拍摄时间索引（用于时间范围查询）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PHOTOS_TAKEN_AT}
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.TAKEN_AT})`,

  // 拍摄位置索引（用于地理查询）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PHOTOS_LOCATION}
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.LATITUDE}, ${PHOTO_FIELDS.LONGITUDE})`,

  // 标签索引（用于标签搜索）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PHOTOS_TAGS}
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.TAGS})`,

  // 水印模板ID索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.PHOTOS_TEMPLATE_ID}
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.TEMPLATE_ID})`
]

/**
 * 水印模板表索引SQL
 */
export const WATERMARK_TEMPLATES_INDEXES = [
  // 分类索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.TEMPLATES_CATEGORY}
   ON ${TABLE_NAMES.WATERMARK_TEMPLATES}(${WATERMARK_TEMPLATE_FIELDS.CATEGORY})`,

  // 默认模板索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.TEMPLATES_DEFAULT}
   ON ${TABLE_NAMES.WATERMARK_TEMPLATES}(${WATERMARK_TEMPLATE_FIELDS.IS_DEFAULT})`,

  // 系统模板索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.TEMPLATES_SYSTEM}
   ON ${TABLE_NAMES.WATERMARK_TEMPLATES}(${WATERMARK_TEMPLATE_FIELDS.IS_SYSTEM})`,

  // 使用次数索引（用于排序热门模板）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.TEMPLATES_USAGE}
   ON ${TABLE_NAMES.WATERMARK_TEMPLATES}(${WATERMARK_TEMPLATE_FIELDS.USAGE_COUNT})`
]

/**
 * 用户表索引SQL
 */
export const USERS_INDEXES = [
  // 用户名索引（唯一索引已由表定义保证）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.USERS_USERNAME}
   ON ${TABLE_NAMES.USERS}(${USER_FIELDS.USERNAME})`,

  // 邮箱索引（唯一索引已由表定义保证）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.USERS_EMAIL}
   ON ${TABLE_NAMES.USERS}(${USER_FIELDS.EMAIL})`,

  // 角色索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.USERS_ROLE}
   ON ${TABLE_NAMES.USERS}(${USER_FIELDS.ROLE})`,

  // 活跃状态索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.USERS_ACTIVE}
   ON ${TABLE_NAMES.USERS}(${USER_FIELDS.IS_ACTIVE})`,

  // 最后登录时间索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.USERS_LAST_LOGIN}
   ON ${TABLE_NAMES.USERS}(${USER_FIELDS.LAST_LOGIN_AT})`
]

/**
 * 备份表索引SQL
 */
export const BACKUPS_INDEXES = [
  // 备份类型索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.BACKUPS_TYPE}
   ON ${TABLE_NAMES.BACKUPS}(${BACKUP_FIELDS.TYPE})`,

  // 备份状态索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.BACKUPS_STATUS}
   ON ${TABLE_NAMES.BACKUPS}(${BACKUP_FIELDS.STATUS})`,

  // 创建时间索引
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.BACKUPS_CREATED}
   ON ${TABLE_NAMES.BACKUPS}(${BACKUP_FIELDS.CREATED_AT})`
]

/**
 * 应用设置表索引SQL
 */
export const APP_SETTINGS_INDEXES = [
  // 设置键索引（主键已自动索引）
  `CREATE INDEX IF NOT EXISTS ${INDEX_NAMES.SETTINGS_KEY}
   ON ${TABLE_NAMES.APP_SETTINGS}(${APP_SETTINGS_FIELDS.KEY})`
]

/**
 * 所有索引创建SQL数组
 */
export const CREATE_INDEXES_SQL = [
  ...PROJECTS_INDEXES,
  ...SITES_INDEXES,
  ...PHOTOS_INDEXES,
  ...WATERMARK_TEMPLATES_INDEXES,
  ...USERS_INDEXES,
  ...BACKUPS_INDEXES,
  ...APP_SETTINGS_INDEXES
]

/**
 * 复合索引定义（用于复杂查询优化）
 */
export const COMPOSITE_INDEXES = [
  // 项目状态+创建时间复合索引
  `CREATE INDEX IF NOT EXISTS idx_projects_status_created
   ON ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.STATUS}, created_at DESC)`,

  // 照片项目ID+拍摄时间复合索引
  `CREATE INDEX IF NOT EXISTS idx_photos_project_taken
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.PROJECT_ID}, ${PHOTO_FIELDS.TAKEN_AT} DESC)`,

  // 照片工点ID+拍摄时间复合索引
  `CREATE INDEX IF NOT EXISTS idx_photos_site_taken
   ON ${TABLE_NAMES.PHOTOS}(${PHOTO_FIELDS.SITE_ID}, ${PHOTO_FIELDS.TAKEN_AT} DESC)`,

  // 工点项目ID+名称复合索引
  `CREATE INDEX IF NOT EXISTS idx_sites_project_name
   ON ${TABLE_NAMES.SITES}(${SITE_FIELDS.PROJECT_ID}, ${SITE_FIELDS.NAME})`,

  // 用户角色+活跃状态复合索引
  `CREATE INDEX IF NOT EXISTS idx_users_role_active
   ON ${TABLE_NAMES.USERS}(${USER_FIELDS.ROLE}, ${USER_FIELDS.IS_ACTIVE})`,

  // 模板分类+系统模板复合索引
  `CREATE INDEX IF NOT EXISTS idx_templates_category_system
   ON ${TABLE_NAMES.WATERMARK_TEMPLATES}(${WATERMARK_TEMPLATE_FIELDS.CATEGORY}, ${WATERMARK_TEMPLATE_FIELDS.IS_SYSTEM})`
]

/**
 * 全文搜索索引（如果支持FTS5）
 */
export const FULLTEXT_INDEXES = [
  // 项目全文搜索索引
  `CREATE VIRTUAL TABLE IF NOT EXISTS projects_fts USING fts5(
    ${PROJECT_FIELDS.NAME},
    ${PROJECT_FIELDS.DESCRIPTION},
    ${PROJECT_FIELDS.CLIENT},
    ${PROJECT_FIELDS.CODE},
    ${PROJECT_FIELDS.TAGS},
    content='${TABLE_NAMES.PROJECTS}',
    content_rowid='${PROJECT_FIELDS.PROJECT_ID}'
  )`,

  // 工点全文搜索索引
  `CREATE VIRTUAL TABLE IF NOT EXISTS sites_fts USING fts5(
    ${SITE_FIELDS.NAME},
    ${SITE_FIELDS.DESCRIPTION},
    ${SITE_FIELDS.ADDRESS},
    ${SITE_FIELDS.TAGS},
    content='${TABLE_NAMES.SITES}',
    content_rowid='${SITE_FIELDS.SITE_ID}'
  )`,

  // 照片全文搜索索引
  `CREATE VIRTUAL TABLE IF NOT EXISTS photos_fts USING fts5(
    ${PHOTO_FIELDS.NOTES},
    ${PHOTO_FIELDS.ADDRESS},
    ${PHOTO_FIELDS.TAGS},
    content='${TABLE_NAMES.PHOTOS}',
    content_rowid='${PHOTO_FIELDS.PHOTO_ID}'
  )`
]

/**
 * 全文搜索触发器（自动同步数据到FTS表）
 */
export const FTS_TRIGGERS = [
  // 项目FTS触发器
  `CREATE TRIGGER IF NOT EXISTS projects_fts_insert AFTER INSERT ON ${TABLE_NAMES.PROJECTS}
   BEGIN
     INSERT INTO projects_fts(rowid, ${PROJECT_FIELDS.NAME}, ${PROJECT_FIELDS.DESCRIPTION}, ${PROJECT_FIELDS.CLIENT}, ${PROJECT_FIELDS.CODE}, ${PROJECT_FIELDS.TAGS})
     VALUES (new.${PROJECT_FIELDS.PROJECT_ID}, new.${PROJECT_FIELDS.NAME}, new.${PROJECT_FIELDS.DESCRIPTION}, new.${PROJECT_FIELDS.CLIENT}, new.${PROJECT_FIELDS.CODE}, new.${PROJECT_FIELDS.TAGS});
   END`,

  `CREATE TRIGGER IF NOT EXISTS projects_fts_delete AFTER DELETE ON ${TABLE_NAMES.PROJECTS}
   BEGIN
     INSERT INTO projects_fts(projects_fts, rowid, ${PROJECT_FIELDS.NAME}, ${PROJECT_FIELDS.DESCRIPTION}, ${PROJECT_FIELDS.CLIENT}, ${PROJECT_FIELDS.CODE}, ${PROJECT_FIELDS.TAGS})
     VALUES ('delete', old.${PROJECT_FIELDS.PROJECT_ID}, old.${PROJECT_FIELDS.NAME}, old.${PROJECT_FIELDS.DESCRIPTION}, old.${PROJECT_FIELDS.CLIENT}, old.${PROJECT_FIELDS.CODE}, old.${PROJECT_FIELDS.TAGS});
   END`,

  `CREATE TRIGGER IF NOT EXISTS projects_fts_update AFTER UPDATE ON ${TABLE_NAMES.PROJECTS}
   BEGIN
     INSERT INTO projects_fts(projects_fts, rowid, ${PROJECT_FIELDS.NAME}, ${PROJECT_FIELDS.DESCRIPTION}, ${PROJECT_FIELDS.CLIENT}, ${PROJECT_FIELDS.CODE}, ${PROJECT_FIELDS.TAGS})
     VALUES ('delete', old.${PROJECT_FIELDS.PROJECT_ID}, old.${PROJECT_FIELDS.NAME}, old.${PROJECT_FIELDS.DESCRIPTION}, old.${PROJECT_FIELDS.CLIENT}, old.${PROJECT_FIELDS.CODE}, old.${PROJECT_FIELDS.TAGS});
     INSERT INTO projects_fts(rowid, ${PROJECT_FIELDS.NAME}, ${PROJECT_FIELDS.DESCRIPTION}, ${PROJECT_FIELDS.CLIENT}, ${PROJECT_FIELDS.CODE}, ${PROJECT_FIELDS.TAGS})
     VALUES (new.${PROJECT_FIELDS.PROJECT_ID}, new.${PROJECT_FIELDS.NAME}, new.${PROJECT_FIELDS.DESCRIPTION}, new.${PROJECT_FIELDS.CLIENT}, new.${PROJECT_FIELDS.CODE}, new.${PROJECT_FIELDS.TAGS});
   END`,

  // 工点FTS触发器
  `CREATE TRIGGER IF NOT EXISTS sites_fts_insert AFTER INSERT ON ${TABLE_NAMES.SITES}
   BEGIN
     INSERT INTO sites_fts(rowid, ${SITE_FIELDS.NAME}, ${SITE_FIELDS.DESCRIPTION}, ${SITE_FIELDS.ADDRESS}, ${SITE_FIELDS.TAGS})
     VALUES (new.${SITE_FIELDS.SITE_ID}, new.${SITE_FIELDS.NAME}, new.${SITE_FIELDS.DESCRIPTION}, new.${SITE_FIELDS.ADDRESS}, new.${SITE_FIELDS.TAGS});
   END`,

  `CREATE TRIGGER IF NOT EXISTS sites_fts_delete AFTER DELETE ON ${TABLE_NAMES.SITES}
   BEGIN
     INSERT INTO sites_fts(sites_fts, rowid, ${SITE_FIELDS.NAME}, ${SITE_FIELDS.DESCRIPTION}, ${SITE_FIELDS.ADDRESS}, ${SITE_FIELDS.TAGS})
     VALUES ('delete', old.${SITE_FIELDS.SITE_ID}, old.${SITE_FIELDS.NAME}, old.${SITE_FIELDS.DESCRIPTION}, old.${SITE_FIELDS.ADDRESS}, old.${SITE_FIELDS.TAGS});
   END`,

  `CREATE TRIGGER IF NOT EXISTS sites_fts_update AFTER UPDATE ON ${TABLE_NAMES.SITES}
   BEGIN
     INSERT INTO sites_fts(sites_fts, rowid, ${SITE_FIELDS.NAME}, ${SITE_FIELDS.DESCRIPTION}, ${SITE_FIELDS.ADDRESS}, ${SITE_FIELDS.TAGS})
     VALUES ('delete', old.${SITE_FIELDS.SITE_ID}, old.${SITE_FIELDS.NAME}, old.${SITE_FIELDS.DESCRIPTION}, old.${SITE_FIELDS.ADDRESS}, old.${SITE_FIELDS.TAGS});
     INSERT INTO sites_fts(rowid, ${SITE_FIELDS.NAME}, ${SITE_FIELDS.DESCRIPTION}, ${SITE_FIELDS.ADDRESS}, ${SITE_FIELDS.TAGS})
     VALUES (new.${SITE_FIELDS.SITE_ID}, new.${SITE_FIELDS.NAME}, new.${SITE_FIELDS.DESCRIPTION}, new.${SITE_FIELDS.ADDRESS}, new.${SITE_FIELDS.TAGS});
   END`
]

/**
 * 所有索引相关SQL（包括复合索引和FTS）
 */
export const ALL_INDEXES_SQL = [
  ...CREATE_INDEXES_SQL,
  ...COMPOSITE_INDEXES,
  ...FULLTEXT_INDEXES,
  ...FTS_TRIGGERS
]

/**
 * 索引统计查询SQL
 */
export const INDEX_STATS_SQL = `
  SELECT
    name,
    tbl_name as table_name,
    sql as definition
  FROM sqlite_master
  WHERE type = 'index'
    AND name NOT LIKE 'sqlite_%'
  ORDER BY tbl_name, name
`

/**
 * 索引使用情况查询SQL（需要ANALYZE命令后才能看到）
 */
export const INDEX_USAGE_SQL = `
  SELECT
    name,
    tbl_name as table_name,
    stat,
    path
  FROM sqlite_stat1
  ORDER BY tbl_name, name
`

/**
 * 删除索引SQL（用于重建索引）
 */
export const DROP_INDEXES_SQL = [
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PROJECTS_NAME}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PROJECTS_STATUS}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PROJECTS_DATES}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PROJECTS_CODE}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.SITES_PROJECT_ID}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.SITES_LOCATION}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.SITES_NAME}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PHOTOS_PROJECT_ID}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PHOTOS_SITE_ID}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PHOTOS_TAKEN_AT}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PHOTOS_LOCATION}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PHOTOS_TAGS}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.PHOTOS_TEMPLATE_ID}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.TEMPLATES_CATEGORY}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.TEMPLATES_DEFAULT}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.TEMPLATES_SYSTEM}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.TEMPLATES_USAGE}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.USERS_USERNAME}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.USERS_EMAIL}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.USERS_ROLE}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.USERS_ACTIVE}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.USERS_LAST_LOGIN}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.BACKUPS_TYPE}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.BACKUPS_STATUS}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.BACKUPS_CREATED}`,
  `DROP INDEX IF EXISTS ${INDEX_NAMES.SETTINGS_KEY}`,
  `DROP INDEX IF EXISTS idx_projects_status_created`,
  `DROP INDEX IF EXISTS idx_photos_project_taken`,
  `DROP INDEX IF EXISTS idx_photos_site_taken`,
  `DROP INDEX IF EXISTS idx_sites_project_name`,
  `DROP INDEX IF EXISTS idx_users_role_active`,
  `DROP INDEX IF EXISTS idx_templates_category_system`
]