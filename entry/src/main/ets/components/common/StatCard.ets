/**
 * ÁªüËÆ°Âç°ÁâáÁªÑ‰ª∂
 * Áî®‰∫éÂ±ïÁ§∫Êï∞ÊçÆÁªüËÆ°‰ø°ÊÅØ
 */

@ComponentV2
export struct StatCard {
  @Param title: string = ''
  @Param value: string | number = ''
  @Param icon: string = 'üìÅ'
  @Param color: string = '#1890FF'
  @Param trend?: 'up' | 'down' | 'stable' = 'stable'
  @Param subtitle?: string = ''
  @Param progress?: number = undefined // Êñ∞Â¢ûËøõÂ∫¶ÂèÇÊï∞
  @Param showLoading?: boolean = false // Êñ∞Â¢ûÂä†ËΩΩÁä∂ÊÄÅ
  @Param onClick?: () => void = () => {} // Êñ∞Â¢ûÁÇπÂáªÂõûË∞É

  build() {
    Column() {
      // ÂõæÊ†áÂíåÊï∞ÂÄº
      Row() {
        // ÂõæÊ†á
        if (this.showLoading) {
          LoadingProgress()
            .width(20)
            .height(20)
            .color(this.color)
            .margin({ right: 12 })
        } else {
          Text(this.icon)
            .fontSize(20)
            .fontColor(this.color)
            .margin({ right: 12 })
        }

        Column() {
          // Êï∞ÂÄº
          if (this.showLoading) {
            Text('...')
              .fontSize(24)
              .fontWeight(FontWeight.Bold)
              .fontColor('#999999')
          } else {
            Text(typeof this.value === 'number' ? this.value.toString() : this.value)
              .fontSize(24)
              .fontWeight(FontWeight.Bold)
              .fontColor('#262626')
          }

          // Ê†áÈ¢ò
          Text(this.title)
            .fontSize(14)
            .fontColor('#8C8C8C')
            .margin({ top: 4 })
        }
        .alignItems(HorizontalAlign.Start)
        .layoutWeight(1)

        // Ë∂ãÂäøÊåáÁ§∫Âô®
        if (this.trend) {
          this.buildTrendIndicator()
        }
      }
      .width('100%')
      .alignItems(VerticalAlign.Center)

      // ÂâØÊ†áÈ¢ò
      if (this.subtitle) {
        Text(this.subtitle)
          .fontSize(12)
          .fontColor('#A6A6A6')
          .margin({ top: 8 })
          .textAlign(TextAlign.Start)
          .width('100%')
      }

      // ËøõÂ∫¶Êù°ÔºàÂ¶ÇÊûúÊúâÁöÑËØùÔºâ
      if (this.progress !== undefined) {
        this.buildProgressBar()
      }
    }
    .width('100%')
    .padding(16)
    .backgroundColor('#FFFFFF')
    .borderRadius(8)
    .shadow({
      radius: 4,
      color: '#00000010',
      offsetX: 0,
      offsetY: 2
    })
    .onClick(() => {
      if (this.onClick && !this.showLoading) {
        this.onClick()
      }
    })
  }

  /**
   * ÊûÑÂª∫ËøõÂ∫¶Êù°
   */
  @Builder
  private buildProgressBar(): void {
    Column({ space: 8 }) {
      // ËøõÂ∫¶Êù°Ê†áÁ≠æ
      Row() {
        Text('ÂÆåÊàêËøõÂ∫¶')
          .fontSize(12)
          .fontColor('#666666')

        Text(`${this.progress}%`)
          .fontSize(14)
          .fontWeight(FontWeight.Medium)
          .fontColor('#333333')
          .margin({ left: 8 })
      }
      .width('100%')

      // ËøõÂ∫¶Êù°
      Progress({
        value: this.progress || 0,
        total: 100,
        type: ProgressType.Linear
      })
        .width('100%')
        .height(6)
        .backgroundColor('#F0F0F0')
        .color(this.color)
        .borderRadius(3)

      // ËøõÂ∫¶ÊèèËø∞
      if (this.progress && this.progress >= 100) {
        Text('‰ªªÂä°ÂÆåÊàê')
          .fontSize(12)
          .fontColor('#52C41A')
          .margin({ top: 4 })
          .textAlign(TextAlign.Center)
          .width('100%')
      } else if (this.progress && this.progress >= 75) {
        Text('Âç≥Â∞ÜÂÆåÊàê')
          .fontSize(12)
          .fontColor('#FAAD14')
          .margin({ top: 4 })
          .textAlign(TextAlign.Center)
          .width('100%')
      } else if (this.progress && this.progress >= 50) {
        Text('ËøõË°å‰∏≠')
          .fontSize(12)
          .fontColor('#1890FF')
          .margin({ top: 4 })
          .textAlign(TextAlign.Center)
          .width('100%')
      }
    }
    .width('100%')
    .padding(12)
    .backgroundColor('#F8F9FA')
    .borderRadius(6)
  }
}

  @Builder
  private buildTrendIndicator(): void {
    Row() {
      if (this.trend === 'up') {
        Text('‚Üë')
          .fontSize(16)
          .fontColor('#52C41A')
      } else if (this.trend === 'down') {
        Text('‚Üì')
          .fontSize(16)
          .fontColor('#FF4D4F')
      }

      if (this.trend !== 'stable') {
        Text(this.trend === 'up' ? '‰∏äÂçá' : '‰∏ãÈôç')
          .fontSize(12)
          .fontColor(this.trend === 'up' ? '#52C41A' : '#FF4D4F')
          .margin({ left: 4 })
      }
    }
  }
}