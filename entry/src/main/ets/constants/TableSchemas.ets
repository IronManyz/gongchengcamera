/**
 * 数据库表结构SQL常量
 * 包含所有表的创建SQL语句
 */

import {
  TABLE_NAMES,
  PROJECT_FIELDS,
  SITE_FIELDS,
  PHOTO_FIELDS,
  WATERMARK_TEMPLATE_FIELDS,
  USER_FIELDS,
  BACKUP_FIELDS,
  APP_SETTINGS_FIELDS,
  DATA_TYPES,
  DEFAULT_VALUES
} from './DatabaseConstants'

/**
 * 项目表创建SQL
 */
export const CREATE_PROJECTS_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.PROJECTS} (
    ${PROJECT_FIELDS.PROJECT_ID} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${PROJECT_FIELDS.NAME} ${DATA_TYPES.TEXT} NOT NULL,
    ${PROJECT_FIELDS.CODE} ${DATA_TYPES.TEXT},
    ${PROJECT_FIELDS.CLIENT} ${DATA_TYPES.TEXT},
    ${PROJECT_FIELDS.MANAGER} ${DATA_TYPES.TEXT},
    ${PROJECT_FIELDS.START_DATE} ${DATA_TYPES.INTEGER},
    ${PROJECT_FIELDS.END_DATE} ${DATA_TYPES.INTEGER},
    ${PROJECT_FIELDS.DESCRIPTION} ${DATA_TYPES.TEXT},
    ${PROJECT_FIELDS.TAGS} ${DATA_TYPES.TEXT},
    ${PROJECT_FIELDS.STATUS} ${DATA_TYPES.TEXT} DEFAULT '${DEFAULT_VALUES.PROJECT_STATUS}',
    ${PROJECT_FIELDS.SITE_COUNT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.PROJECT_SITE_COUNT},
    ${PROJECT_FIELDS.PHOTO_COUNT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.PROJECT_PHOTO_COUNT},
    ${PROJECT_FIELDS.METADATA} ${DATA_TYPES.TEXT},
    ${'created_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'updated_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'version'} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.VERSION}
  )
`

/**
 * 工点表创建SQL
 */
export const CREATE_SITES_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.SITES} (
    ${SITE_FIELDS.SITE_ID} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${SITE_FIELDS.PROJECT_ID} ${DATA_TYPES.TEXT} NOT NULL,
    ${SITE_FIELDS.NAME} ${DATA_TYPES.TEXT} NOT NULL,
    ${SITE_FIELDS.ADDRESS} ${DATA_TYPES.TEXT},
    ${SITE_FIELDS.LATITUDE} ${DATA_TYPES.REAL},
    ${SITE_FIELDS.LONGITUDE} ${DATA_TYPES.REAL},
    ${SITE_FIELDS.ALTITUDE} ${DATA_TYPES.REAL},
    ${SITE_FIELDS.DESCRIPTION} ${DATA_TYPES.TEXT},
    ${SITE_FIELDS.TAGS} ${DATA_TYPES.TEXT},
    ${SITE_FIELDS.LOCATION_DATA} ${DATA_TYPES.TEXT},
    ${SITE_FIELDS.PHOTO_COUNT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.SITE_PHOTO_COUNT},
    ${'created_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'updated_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'version'} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.VERSION},
    FOREIGN KEY (${SITE_FIELDS.PROJECT_ID}) REFERENCES ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.PROJECT_ID}) ON DELETE CASCADE
  )
`

/**
 * 照片表创建SQL
 */
export const CREATE_PHOTOS_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.PHOTOS} (
    ${PHOTO_FIELDS.PHOTO_ID} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${PHOTO_FIELDS.PROJECT_ID} ${DATA_TYPES.TEXT} NOT NULL,
    ${PHOTO_FIELDS.SITE_ID} ${DATA_TYPES.TEXT} NOT NULL,
    ${PHOTO_FIELDS.FILE_PATH} ${DATA_TYPES.TEXT} NOT NULL,
    ${PHOTO_FIELDS.THUMBNAIL_PATH} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.TAKEN_AT} ${DATA_TYPES.INTEGER} NOT NULL,
    ${PHOTO_FIELDS.LATITUDE} ${DATA_TYPES.REAL},
    ${PHOTO_FIELDS.LONGITUDE} ${DATA_TYPES.REAL},
    ${PHOTO_FIELDS.ALTITUDE} ${DATA_TYPES.REAL},
    ${PHOTO_FIELDS.AZIMUTH} ${DATA_TYPES.REAL},
    ${PHOTO_FIELDS.ADDRESS} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.WEATHER} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.TEMPLATE_ID} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.NOTES} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.TAGS} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.FILE_SIZE} ${DATA_TYPES.INTEGER},
    ${PHOTO_FIELDS.WIDTH} ${DATA_TYPES.INTEGER},
    ${PHOTO_FIELDS.HEIGHT} ${DATA_TYPES.INTEGER},
    ${PHOTO_FIELDS.EDITED} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.BOOLEAN_FALSE},
    ${PHOTO_FIELDS.EXIF_DATA} ${DATA_TYPES.TEXT},
    ${PHOTO_FIELDS.ANNOTATIONS} ${DATA_TYPES.TEXT},
    ${'created_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'updated_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'version'} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.VERSION},
    FOREIGN KEY (${PHOTO_FIELDS.PROJECT_ID}) REFERENCES ${TABLE_NAMES.PROJECTS}(${PROJECT_FIELDS.PROJECT_ID}) ON DELETE CASCADE,
    FOREIGN KEY (${PHOTO_FIELDS.SITE_ID}) REFERENCES ${TABLE_NAMES.SITES}(${SITE_FIELDS.SITE_ID}) ON DELETE CASCADE
  )
`

/**
 * 水印模板表创建SQL
 */
export const CREATE_WATERMARK_TEMPLATES_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.WATERMARK_TEMPLATES} (
    ${WATERMARK_TEMPLATE_FIELDS.TEMPLATE_ID} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${WATERMARK_TEMPLATE_FIELDS.NAME} ${DATA_TYPES.TEXT} NOT NULL,
    ${WATERMARK_TEMPLATE_FIELDS.DESCRIPTION} ${DATA_TYPES.TEXT},
    ${WATERMARK_TEMPLATE_FIELDS.CATEGORY} ${DATA_TYPES.TEXT} NOT NULL,
    ${WATERMARK_TEMPLATE_FIELDS.FIELDS} ${DATA_TYPES.TEXT} NOT NULL,
    ${WATERMARK_TEMPLATE_FIELDS.STYLE} ${DATA_TYPES.TEXT} NOT NULL,
    ${WATERMARK_TEMPLATE_FIELDS.PREVIEW} ${DATA_TYPES.TEXT},
    ${WATERMARK_TEMPLATE_FIELDS.IS_DEFAULT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.BOOLEAN_FALSE},
    ${WATERMARK_TEMPLATE_FIELDS.IS_SYSTEM} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.BOOLEAN_FALSE},
    ${WATERMARK_TEMPLATE_FIELDS.USAGE_COUNT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.TEMPLATE_USAGE_COUNT},
    ${WATERMARK_TEMPLATE_FIELDS.CONFIG} ${DATA_TYPES.TEXT},
    ${'created_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'updated_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'version'} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.VERSION}
  )
`

/**
 * 用户表创建SQL
 */
export const CREATE_USERS_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.USERS} (
    ${USER_FIELDS.USER_ID} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${USER_FIELDS.USERNAME} ${DATA_TYPES.TEXT} NOT NULL UNIQUE,
    ${USER_FIELDS.EMAIL} ${DATA_TYPES.TEXT} UNIQUE,
    ${USER_FIELDS.DISPLAY_NAME} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.AVATAR} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.PHONE} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.DEPARTMENT} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.POSITION} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.ROLE} ${DATA_TYPES.TEXT} NOT NULL,
    ${USER_FIELDS.PERMISSIONS} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.IS_ACTIVE} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.BOOLEAN_TRUE},
    ${USER_FIELDS.LAST_LOGIN_AT} ${DATA_TYPES.INTEGER},
    ${USER_FIELDS.PHOTO_COUNT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.USER_PHOTO_COUNT},
    ${USER_FIELDS.PROJECT_COUNT} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.USER_PROJECT_COUNT},
    ${USER_FIELDS.PREFERENCES} ${DATA_TYPES.TEXT},
    ${USER_FIELDS.SETTINGS} ${DATA_TYPES.TEXT},
    ${'created_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'updated_at'} ${DATA_TYPES.INTEGER} NOT NULL,
    ${'version'} ${DATA_TYPES.INTEGER} DEFAULT ${DEFAULT_VALUES.VERSION}
  )
`

/**
 * 备份表创建SQL
 */
export const CREATE_BACKUPS_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.BACKUPS} (
    ${BACKUP_FIELDS.BACKUP_ID} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${BACKUP_FIELDS.NAME} ${DATA_TYPES.TEXT} NOT NULL,
    ${BACKUP_FIELDS.TYPE} ${DATA_TYPES.TEXT} NOT NULL,
    ${BACKUP_FIELDS.SIZE} ${DATA_TYPES.INTEGER},
    ${BACKUP_FIELDS.FILE_PATH} ${DATA_TYPES.TEXT},
    ${BACKUP_FIELDS.CREATED_AT} ${DATA_TYPES.INTEGER} NOT NULL,
    ${BACKUP_FIELDS.COMPLETED_AT} ${DATA_TYPES.INTEGER},
    ${BACKUP_FIELDS.STATUS} ${DATA_TYPES.TEXT} NOT NULL,
    ${BACKUP_FIELDS.DESCRIPTION} ${DATA_TYPES.TEXT}
  )
`

/**
 * 应用设置表创建SQL
 */
export const CREATE_APP_SETTINGS_TABLE = `
  CREATE TABLE IF NOT EXISTS ${TABLE_NAMES.APP_SETTINGS} (
    ${APP_SETTINGS_FIELDS.KEY} ${DATA_TYPES.TEXT} PRIMARY KEY,
    ${APP_SETTINGS_FIELDS.VALUE} ${DATA_TYPES.TEXT} NOT NULL,
    ${APP_SETTINGS_FIELDS.TYPE} ${DATA_TYPES.TEXT} NOT NULL,
    ${APP_SETTINGS_FIELDS.UPDATED_AT} ${DATA_TYPES.INTEGER} NOT NULL
  )
`

/**
 * 所有表创建SQL数组
 */
export const CREATE_TABLES_SQL = [
  CREATE_PROJECTS_TABLE,
  CREATE_SITES_TABLE,
  CREATE_PHOTOS_TABLE,
  CREATE_WATERMARK_TEMPLATES_TABLE,
  CREATE_USERS_TABLE,
  CREATE_BACKUPS_TABLE,
  CREATE_APP_SETTINGS_TABLE
]

/**
 * 表删除SQL（用于测试或重置）
 */
export const DROP_TABLES_SQL = [
  `DROP TABLE IF EXISTS ${TABLE_NAMES.PHOTOS}`,
  `DROP TABLE IF EXISTS ${TABLE_NAMES.SITES}`,
  `DROP TABLE IF EXISTS ${TABLE_NAMES.PROJECTS}`,
  `DROP TABLE IF EXISTS ${TABLE_NAMES.WATERMARK_TEMPLATES}`,
  `DROP TABLE IF EXISTS ${TABLE_NAMES.USERS}`,
  `DROP TABLE IF EXISTS ${TABLE_NAMES.BACKUPS}`,
  `DROP TABLE IF EXISTS ${TABLE_NAMES.APP_SETTINGS}`
]

/**
 * 表清空SQL（保留表结构，删除所有数据）
 */
export const CLEAR_TABLES_SQL = [
  `DELETE FROM ${TABLE_NAMES.PHOTOS}`,
  `DELETE FROM ${TABLE_NAMES.SITES}`,
  `DELETE FROM ${TABLE_NAMES.PROJECTS}`,
  `DELETE FROM ${TABLE_NAMES.WATERMARK_TEMPLATES}`,
  `DELETE FROM ${TABLE_NAMES.USERS}`,
  `DELETE FROM ${TABLE_NAMES.BACKUPS}`,
  `DELETE FROM ${TABLE_NAMES.APP_SETTINGS}`
]

/**
 * 表数据统计SQL接口
 */
interface TableCountSql {
  PROJECTS: string
  SITES: string
  PHOTOS: string
  WATERMARK_TEMPLATES: string
  USERS: string
  BACKUPS: string
  APP_SETTINGS: string
}

/**
 * 表数据统计SQL
 */
export const TABLE_COUNT_SQL: TableCountSql = {
  PROJECTS: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.PROJECTS}`,
  SITES: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.SITES}`,
  PHOTOS: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.PHOTOS}`,
  WATERMARK_TEMPLATES: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.WATERMARK_TEMPLATES}`,
  USERS: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.USERS}`,
  BACKUPS: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.BACKUPS}`,
  APP_SETTINGS: `SELECT COUNT(*) as count FROM ${TABLE_NAMES.APP_SETTINGS}`
}

/**
 * 表存在性检查SQL
 */
export const TABLE_EXISTS_SQL = (tableName: string): string => {
  return `SELECT name FROM sqlite_master WHERE type='table' AND name='${tableName}'`
}

/**
 * 表结构查询SQL
 */
export const TABLE_SCHEMA_SQL = (tableName: string): string => {
  return `PRAGMA table_info(${tableName})`
}

/**
 * 获取所有表名SQL
 */
export const GET_ALL_TABLES_SQL = `
  SELECT name FROM sqlite_master
  WHERE type='table' AND name NOT LIKE 'sqlite_%'
  ORDER BY name
`

/**
 * 数据库版本信息表创建SQL（用于版本管理）
 */
export const CREATE_VERSION_TABLE = `
  CREATE TABLE IF NOT EXISTS schema_version (
    version INTEGER PRIMARY KEY,
    applied_at INTEGER NOT NULL,
    description TEXT
  )
`

/**
 * 插入版本信息SQL
 */
export const INSERT_VERSION_SQL = `
  INSERT OR REPLACE INTO schema_version (version, applied_at, description)
  VALUES (?, ?, ?)
`

/**
 * 获取当前版本SQL
 */
export const GET_CURRENT_VERSION_SQL = `
  SELECT version FROM schema_version ORDER BY version DESC LIMIT 1
`