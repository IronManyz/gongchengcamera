/**
 * Áõ∏ÂÜåÈ°µÈù¢
 * Êèê‰æõÁÖßÁâáÊµèËßà„ÄÅÊêúÁ¥¢„ÄÅÁ≠õÈÄâÂíåÁÆ°ÁêÜÂäüËÉΩ
 */

import { BottomNavigation } from '../../components/common/BottomNavigation'

interface PhotoItem {
  id: string
  name: string
  project: string
  site: string
  date: string
  size: string
  thumbnail?: string
}

@Entry
@Component
struct GalleryPage {
  @State private viewMode: 'grid' | 'list' = 'grid'
  @State private selectedPhotos: string[] = []
  @State private searchQuery: string = ''
  @State private selectedFilter: string = 'ÂÖ®ÈÉ®'

  private filters = ['ÂÖ®ÈÉ®', '‰ªäÂ§©', 'Êú¨Âë®', 'Êú¨Êúà', 'Â∑•Á®ãA', 'Â∑•Á®ãB']

  // Ê®°ÊãüÁÖßÁâáÊï∞ÊçÆ
  private photos: PhotoItem[] = [
    {
      id: '1',
      name: 'IMG_001.jpg',
      project: 'Â∑•Á®ãA',
      site: 'Â∑•ÁÇπ1',
      date: '2024-01-15',
      size: '2.4 MB'
    },
    {
      id: '2',
      name: 'IMG_002.jpg',
      project: 'Â∑•Á®ãA',
      site: 'Â∑•ÁÇπ2',
      date: '2024-01-15',
      size: '1.8 MB'
    },
    {
      id: '3',
      name: 'IMG_003.jpg',
      project: 'Â∑•Á®ãB',
      site: 'Â∑•ÁÇπ1',
      date: '2024-01-14',
      size: '3.1 MB'
    },
    {
      id: '4',
      name: 'IMG_004.jpg',
      project: 'Â∑•Á®ãB',
      site: 'Â∑•ÁÇπ3',
      date: '2024-01-14',
      size: '2.7 MB'
    },
    {
      id: '5',
      name: 'IMG_005.jpg',
      project: 'Â∑•Á®ãC',
      site: 'Â∑•ÁÇπ1',
      date: '2024-01-13',
      size: '2.2 MB'
    },
    {
      id: '6',
      name: 'IMG_006.jpg',
      project: 'Â∑•Á®ãC',
      site: 'Â∑•ÁÇπ2',
      date: '2024-01-13',
      size: '2.9 MB'
    }
  ]

  build() {
    Column() {
      Blank()
        .height(24)

      // Â§¥ÈÉ®ÂØºËà™
      Row() {
        Text('Áõ∏ÂÜå')
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
          .fontColor('#262626')
          .layoutWeight(1)
          .textAlign(TextAlign.Start)

        // ËßÜÂõæÂàáÊç¢
        Row({ space: 12 }) {
          Text(this.viewMode === 'grid' ? 'üì±' : 'üìã')
            .fontSize(20)
            .fontColor('#1890FF')
            .onClick(() => {
              this.viewMode = this.viewMode === 'grid' ? 'list' : 'grid'
            })
        }
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 12, bottom: 12 })
      .backgroundColor('#FFFFFF')

      // ÊêúÁ¥¢ÂíåÁ≠õÈÄâÊ†è
      Column() {
        // ÊêúÁ¥¢Ê°Ü
        Row() {
          Text('üîç')
            .fontSize(16)
            .fontColor('#8C8C8C')
            .margin({ right: 8 })

          TextInput({ placeholder: 'ÊêúÁ¥¢ÁÖßÁâá„ÄÅÂ∑•Á®ãÊàñÂ∑•ÁÇπ...' })
            .fontSize(14)
            .fontColor('#262626')
            .placeholderColor('#C0C0C0')
            .backgroundColor('#F5F5F5')
            .borderRadius(8)
            .padding({ left: 8, right: 8 })
            .layoutWeight(1)
            .onChange((value: string) => {
              this.searchQuery = value
            })
        }
        .width('100%')
        .padding(12)
        .backgroundColor('#F8F9FA')
        .borderRadius(8)
        .margin({ bottom: 12 })

        // Á≠õÈÄâÊ†áÁ≠æ
        Row({ space: 8 }) {
          ForEach(this.filters, (filter: string) => {
            Text(filter)
              .fontSize(14)
              .fontColor(this.selectedFilter === filter ? '#FFFFFF' : '#1890FF')
              .backgroundColor(this.selectedFilter === filter ? '#1890FF' : '#F0F9FF')
              .borderRadius(16)
              .padding({ left: 12, right: 12, top: 6, bottom: 6 })
              .onClick(() => {
                this.selectedFilter = filter
              })
          })
        }
        .width('100%')
        .justifyContent(FlexAlign.Start)
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 12, bottom: 12 })
      .backgroundColor('#FFFFFF')

      // ÁªüËÆ°‰ø°ÊÅØ
      Row() {
        Text(`${this.photos.length} Âº†ÁÖßÁâá`)
          .fontSize(14)
          .fontColor('#8C8C8C')

        Blank()

        if (this.selectedPhotos.length > 0) {
          Text(`Â∑≤ÈÄâÊã© ${this.selectedPhotos.length} Âº†`)
            .fontSize(14)
            .fontColor('#1890FF')
            .fontWeight(FontWeight.Medium)
        }
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 8, bottom: 8 })
      .backgroundColor('#FFFFFF')

      // ÁÖßÁâáÂ±ïÁ§∫Âå∫Âüü
      Scroll() {
        if (this.viewMode === 'grid') {
          // ÁΩëÊ†ºËßÜÂõæ
          Grid() {
            ForEach(this.photos, (photo: PhotoItem) => {
              GridItem() {
                Column() {
                  // ÁÖßÁâáÁº©Áï•ÂõæÂç†‰ΩçÁ¨¶
                  Stack() {
                    Text('üì∑')
                      .fontSize(24)
                      .fontColor('#C0C0C0')

                    // ÈÄâÊã©Ê°Ü
                    if (this.selectedPhotos.includes(photo.id)) {
                      Stack() {
                        Circle({ width: 20, height: 20 })
                          .fill('#1890FF')
                        Text('‚úì')
                          .fontSize(12)
                          .fontColor('#FFFFFF')
                      }
                      .position({ x: 8, y: 8 })
                    }
                  }
                  .width('100%')
                  .height(120)
                  .backgroundColor('#F5F5F5')
                  .borderRadius(8)
                  .margin({ bottom: 8 })
                  .onClick(() => {
                    if (this.selectedPhotos.includes(photo.id)) {
                      this.selectedPhotos = this.selectedPhotos.filter(id => id !== photo.id)
                    } else {
                      this.selectedPhotos.push(photo.id)
                    }
                  })

                  // ÁÖßÁâá‰ø°ÊÅØ
                  Column() {
                    Text(photo.name)
                      .fontSize(12)
                      .fontColor('#262626')
                      .maxLines(1)
                      .textOverflow({ overflow: TextOverflow.Ellipsis })
                      .width('100%')

                    Text(`${photo.project} - ${photo.site}`)
                      .fontSize(10)
                      .fontColor('#8C8C8C')
                      .maxLines(1)
                      .textOverflow({ overflow: TextOverflow.Ellipsis })
                      .width('100%')
                      .margin({ top: 2 })

                    Text(photo.date)
                      .fontSize(10)
                      .fontColor('#C0C0C0')
                      .margin({ top: 2 })
                  }
                  .alignItems(HorizontalAlign.Start)
                  .width('100%')
                }
                .padding(8)
              }
            })
          }
          .columnsTemplate('1fr 1fr 1fr')
          .columnsGap(8)
          .rowsGap(8)
          .padding({ left: 16, right: 16, bottom: 16 })
        } else {
          // ÂàóË°®ËßÜÂõæ
          Column({ space: 1 }) {
            ForEach(this.photos, (photo: PhotoItem) => {
              Row() {
                // ÁÖßÁâáÁº©Áï•ÂõæÂç†‰ΩçÁ¨¶
                Text('üì∑')
                  .fontSize(20)
                  .fontColor('#C0C0C0')
                  .margin({ right: 12 })
                  .width(40)
                  .height(40)
                  .textAlign(TextAlign.Center)
                  .backgroundColor('#F5F5F5')
                  .borderRadius(4)

                Column() {
                  Text(photo.name)
                    .fontSize(14)
                    .fontColor('#262626')
                    .maxLines(1)
                    .textOverflow({ overflow: TextOverflow.Ellipsis })

                  Row() {
                    Text(`${photo.project} - ${photo.site}`)
                      .fontSize(12)
                      .fontColor('#8C8C8C')
                    Blank()
                    Text(photo.size)
                      .fontSize(12)
                      .fontColor('#C0C0C0')
                  }
                  .width('100%')
                  .margin({ top: 2 })
                }
                .alignItems(HorizontalAlign.Start)
                .layoutWeight(1)

                Text(photo.date)
                  .fontSize(12)
                  .fontColor('#C0C0C0')
              }
              .width('100%')
              .padding(16)
              .alignItems(VerticalAlign.Center)
              .backgroundColor('#FFFFFF')
              .onClick(() => {
                console.log('Photo clicked:', photo.name)
              })
            })
          }
          .width('100%')
        }
      }
      .layoutWeight(1)
      .backgroundColor('#F5F5F5')

      // Â∫ïÈÉ®Êìç‰ΩúÊ†è
      if (this.selectedPhotos.length > 0) {
        Row() {
          Button('ÂÖ®ÈÄâ')
            .fontSize(14)
            .fontColor('#1890FF')
            .backgroundColor(Color.Transparent)
            .onClick(() => {
              if (this.selectedPhotos.length === this.photos.length) {
                this.selectedPhotos = []
              } else {
                this.selectedPhotos = this.photos.map(photo => photo.id)
              }
            })

          Blank()

          Button('Âà†Èô§')
            .fontSize(14)
            .fontColor('#FFFFFF')
            .backgroundColor('#FF4D4F')
            .borderRadius(8)
            .onClick(() => {
              console.log('Delete selected photos:', this.selectedPhotos)
              this.selectedPhotos = []
            })

          Button('ÂàÜ‰∫´')
            .fontSize(14)
            .fontColor('#FFFFFF')
            .backgroundColor('#1890FF')
            .borderRadius(8)
            .margin({ left: 12 })
            .onClick(() => {
              console.log('Share selected photos:', this.selectedPhotos)
            })
        }
        .width('100%')
        .padding({ left: 16, right: 16, top: 12, bottom: 8 })
        .backgroundColor('#FFFFFF')
      }

      // Â∫ïÈÉ®ÂØºËà™Ê†è
      BottomNavigation({
        currentPage: 'pages/gallery/GalleryPlaceholderPage'
      })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
  }
}
